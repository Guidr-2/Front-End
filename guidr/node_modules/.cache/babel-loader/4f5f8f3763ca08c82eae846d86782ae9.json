{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert Kulp\\\\Documents\\\\Lambda\\\\PT-Classes\\\\Projects\\\\build_week_ro\\\\Front-End\\\\guidr\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport * as Yup from 'yup'; // import axios from 'axios';\n\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport './LoginForm.css';\nimport { withFormik, Form, Field } from 'formik';\n\nconst Login = ({\n  values,\n  errors,\n  touched\n}) => {\n  // console.log('Submitting', values.isSubmitting);\n  return React.createElement(Form, {\n    className: \"formBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Login \"), React.createElement(Field, {\n    className: \"input\",\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"UserName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), touched.username && errors.username && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.username), React.createElement(Field, {\n    className: \"input\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, errors.password), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    disabled: values.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, values.isSubmitting ? 'Submitting' : 'Login'));\n};\n\nexport default withFormik({\n  mapPropsToValues: props => ({\n    username: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    username: Yup.string().min(2, 'Too Short!').max(70, 'Too Long!').required('UserName is Required!'),\n    password: Yup.string().min(6, 'Too Short!').max(70, 'Too Long!').required('Password is Required')\n  }),\n  handleSubmit: (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // console.log(values);\n    axiosWithAuth().post('auth/login', values).then(response => {\n      console.log('Data', response);\n      localStorage.setItem('token', response.data.token);\n      props.history.push('/Trips');\n    }).catch(err => console.log(err.response));\n    setTimeout(() => {\n      console.log('Entered Value', values);\n      setSubmitting(false);\n    }, 1000);\n    resetForm();\n  }\n})(Login);","map":{"version":3,"sources":["C:/Users/Robert Kulp/Documents/Lambda/PT-Classes/Projects/build_week_ro/Front-End/guidr/src/components/Login.js"],"names":["React","Yup","axiosWithAuth","withFormik","Form","Field","Login","values","errors","touched","username","password","isSubmitting","mapPropsToValues","props","validationSchema","object","shape","string","min","max","required","handleSubmit","setSubmitting","resetForm","post","then","response","console","log","localStorage","setItem","data","token","history","push","catch","err","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as Yup from 'yup';\r\n// import axios from 'axios';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\n\r\nimport './LoginForm.css';\r\n\r\nimport { withFormik, Form, Field } from 'formik';\r\n\r\nconst Login = ({ values, errors, touched }) => {\r\n  // console.log('Submitting', values.isSubmitting);\r\n  return (\r\n    <Form className='formBody'>\r\n      <h1> Login </h1>\r\n      <Field\r\n        className='input'\r\n        type='text'\r\n        name='username'\r\n        placeholder='UserName'\r\n      />\r\n      {touched.username && errors.username && (\r\n        <p className='errors'>{errors.username}</p>\r\n      )}\r\n      <Field\r\n        className='input'\r\n        type='password'\r\n        name='password'\r\n        placeholder='Password'\r\n      />\r\n      {touched.password && errors.password && (\r\n        <p className='errors'>{errors.password}</p>\r\n      )}\r\n      <button className='button' type='submit' disabled={values.isSubmitting}>\r\n        {values.isSubmitting ? 'Submitting' : 'Login'}\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withFormik({\r\n  mapPropsToValues: props => ({\r\n    username: '',\r\n    password: ''\r\n  }),\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(2, 'Too Short!')\r\n      .max(70, 'Too Long!')\r\n      .required('UserName is Required!'),\r\n    password: Yup.string()\r\n      .min(6, 'Too Short!')\r\n      .max(70, 'Too Long!')\r\n      .required('Password is Required')\r\n  }),\r\n  handleSubmit: (values, { props, setSubmitting, resetForm }) => {\r\n    // console.log(values);\r\n    axiosWithAuth()\r\n      .post('auth/login', values)\r\n      .then(response => {\r\n        console.log('Data', response);\r\n        localStorage.setItem('token', response.data.token)\r\n        props.history.push('/Trips')\r\n      })\r\n      .catch(err => console.log(err.response));\r\n\r\n    setTimeout(() => {\r\n      console.log('Entered Value', values);\r\n      setSubmitting(false);\r\n    }, 1000);\r\n    resetForm();\r\n  }\r\n})(Login);\r\n"]},"metadata":{},"sourceType":"module"}