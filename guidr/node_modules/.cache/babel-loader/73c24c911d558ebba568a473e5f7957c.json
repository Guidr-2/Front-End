{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert Kulp\\\\Documents\\\\Lambda\\\\PT-Classes\\\\Projects\\\\build_week_ro\\\\Front-End\\\\guidr\\\\src\\\\components\\\\UpdateTrip.js\";\nimport React, { useState, useEffect } from 'react';\nimport axiosWithAuth from '../utils/axiosWithAuth';\n\nconst jwtDecode = require('jwt-decode');\n\nfunction UpdateTrip(props) {\n  // console.log(props)\n  const [tripUpdate, setUpdatedTrip] = useState([]);\n  console.log(tripUpdate);\n  useEffect(() => {\n    axiosWithAuth().get(`trips/${props.match.params.id}`).then(result => {\n      // console.log(result)\n      setUpdatedTrip(result.data[0]);\n    }).catch(error => {\n      console.log(error);\n    }); // we're subscribing to the param, just in case it ever changes\n    // so it'll re-fetch with the new ID\n  }, [props.match.params.id]);\n\n  const handleChange = e => {\n    setUpdatedTrip({ ...tripUpdate,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const decoded = jwtDecode(localStorage.getItem('token'));\n    tripUpdate.user_id = decoded.userid; // tripUpdate.is_professional = 1;\n    // tripUpdate.is_private = 0;\n    // tripUpdate.distance = '20 miles';\n    // tripUpdate.date = \"2020-06-01 08:00:00:000\";\n\n    axiosWithAuth().put(`trips/${tripUpdate.id}`, tripUpdate).then(response => {\n      console.log(tripUpdate);\n      setUpdatedTrip({\n        tripUpdate: response.data\n      });\n      console.log(response);\n      document.getElementById('reset').reset();\n    }).catch(err => console.log(err.response, tripUpdate)); // document.getElementById('reset').reset();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"CreateTrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Update Trip\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    id: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"New Trip Name\",\n    value: tripUpdate.title,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Trip Description\",\n    value: tripUpdate.description,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"duration\",\n    placeholder: \"Trip Duration\",\n    value: tripUpdate.duration,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"distance\",\n    placeholder: \"Distance Traveled\",\n    value: tripUpdate.distance,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"trip_type\",\n    placeholder: \"Type of Trip\",\n    value: tripUpdate.trip_type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Private Guide\"), React.createElement(\"input\", {\n    className: \"checkbox\",\n    type: \"checkbox\",\n    name: \"is_private\",\n    value: tripUpdate.is_private = 0,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Professional Guide\"), React.createElement(\"input\", {\n    className: \"checkbox\",\n    type: \"checkbox\",\n    name: \"is_professional\",\n    value: tripUpdate.is_professional = 0,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"time\",\n    name: \"date\",\n    value: tripUpdate.date,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Add Trip\")));\n}\n\nexport default UpdateTrip;","map":{"version":3,"sources":["C:/Users/Robert Kulp/Documents/Lambda/PT-Classes/Projects/build_week_ro/Front-End/guidr/src/components/UpdateTrip.js"],"names":["React","useState","useEffect","axiosWithAuth","jwtDecode","require","UpdateTrip","props","tripUpdate","setUpdatedTrip","console","log","get","match","params","id","then","result","data","catch","error","handleChange","e","target","name","value","handleSubmit","preventDefault","decoded","localStorage","getItem","user_id","userid","put","response","document","getElementById","reset","err","title","description","duration","distance","trip_type","is_private","is_professional","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\n\r\nconst jwtDecode = require('jwt-decode');\r\n\r\nfunction UpdateTrip(props) {\r\n\t// console.log(props)\r\n\tconst [tripUpdate, setUpdatedTrip] = useState([]);\r\n  console.log(tripUpdate)\r\n\r\n  \tuseEffect(() => {\r\n\t\taxiosWithAuth()\r\n\t\t.get(`trips/${props.match.params.id}`)\r\n\t\t.then((result) => {\r\n\t\t\t// console.log(result)\r\n\t\t\tsetUpdatedTrip(result.data[0])\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t\t// we're subscribing to the param, just in case it ever changes\r\n\t\t// so it'll re-fetch with the new ID\r\n\t}, [props.match.params.id])\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetUpdatedTrip({\r\n\t\t\t...tripUpdate,\r\n\t\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault()\r\n\r\n\t    const decoded = jwtDecode(localStorage.getItem('token'));\r\n\t    tripUpdate.user_id = decoded.userid;\r\n\t    // tripUpdate.is_professional = 1;\r\n\t    // tripUpdate.is_private = 0;\r\n\t    // tripUpdate.distance = '20 miles';\r\n\t    // tripUpdate.date = \"2020-06-01 08:00:00:000\";\r\n\t\taxiosWithAuth()\r\n\t\t.put(`trips/${tripUpdate.id}`, tripUpdate)\r\n\t\t.then(response => {\r\n\t      \tconsole.log(tripUpdate);\r\n\t\t\tsetUpdatedTrip({tripUpdate: response.data })\r\n\t      \tconsole.log(response)\r\n\t      \tdocument.getElementById('reset').reset();\r\n\t\t})\r\n\t    .catch(err => console.log(err.response, tripUpdate));\r\n\t    // document.getElementById('reset').reset();\r\n    };\r\n\r\n  \treturn (\r\n  \t\t<div className='CreateTrip'>\r\n  \t\t\t<h1>Update Trip</h1>\r\n\r\n  \t\t\t<form onSubmit={handleSubmit} id='reset'>\r\n  \t\t\t\t<input \r\n  \t\t\t\t\ttype='text'\r\n  \t\t\t\t\tname='title'\r\n  \t\t\t\t\tplaceholder='New Trip Name'\r\n  \t\t\t\t\tvalue={tripUpdate.title}\r\n  \t\t\t\t\tonChange={handleChange}\r\n  \t\t\t\t/>\r\n\r\n  \t\t\t\t<input \r\n  \t\t\t\t\ttype='text'\r\n  \t\t\t\t\tname='description'\r\n  \t\t\t\t\tplaceholder='Trip Description'\r\n  \t\t\t\t\tvalue={tripUpdate.description}\r\n  \t\t\t\t\tonChange={handleChange}\r\n  \t\t\t\t/>\r\n\r\n  \t\t\t\t<input \r\n  \t\t\t\t\ttype='text'\r\n  \t\t\t\t\tname='duration'\r\n  \t\t\t\t\tplaceholder='Trip Duration'\r\n  \t\t\t\t\tvalue={tripUpdate.duration}\r\n  \t\t\t\t\tonChange={handleChange}\r\n  \t\t\t\t/>\r\n\r\n  \t\t\t\t<input \r\n  \t\t\t\t\ttype='text'\r\n  \t\t\t\t\tname='distance'\r\n  \t\t\t\t\tplaceholder='Distance Traveled'\r\n  \t\t\t\t\tvalue={tripUpdate.distance}\r\n            onChange={handleChange}\r\n  \t\t\t\t/>\r\n\r\n  \t\t\t\t<input \r\n  \t\t\t\t\ttype='text'\r\n  \t\t\t\t\tname='trip_type'\r\n  \t\t\t\t\tplaceholder='Type of Trip'\r\n  \t\t\t\t\tvalue={tripUpdate.trip_type}\r\n  \t\t\t\t\tonChange={handleChange}\r\n  \t\t\t\t/>\r\n\r\n          <p>Private Guide</p>\r\n          <input className='checkbox'\r\n            type='checkbox'\r\n            name='is_private'\r\n            value={tripUpdate.is_private = 0}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <p>Professional Guide</p>\r\n          <input className='checkbox'\r\n            type='checkbox'\r\n            name='is_professional'\r\n            value={tripUpdate.is_professional = 0}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <input \r\n            type='time'\r\n            name='date'\r\n            value={tripUpdate.date}\r\n            onChange={handleChange}\r\n          />\r\n  \t\t\t\t<button>Add Trip</button>\r\n  \t\t\t</form>\r\n  \t\t\r\n    \t</div>\r\n    );\r\n}\r\n\r\nexport default UpdateTrip;\r\n"]},"metadata":{},"sourceType":"module"}